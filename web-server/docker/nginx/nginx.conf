# nginx.conf

worker_processes 1;

events {
    worker_connections 1024;
}

http {
    # General settings
    include       mime.types;
    default_type  application/octet-stream;

    # Logging
    access_log  /var/log/nginx/access.log;
    error_log   /var/log/nginx/error.log;

    sendfile        on;
    keepalive_timeout  65;

    # SSL Configuration
    ssl_certificate     ./certs/server.crt;
    ssl_certificate_key ./certs/server.key;

    server {
        listen 80;
        server_name localhost;

        # Redirect all HTTP requests to HTTPS
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        server_name localhost;

        # SSL Configuration
        ssl_certificate     ./certs/server.crt;
        ssl_certificate_key ./certs/server.key;

        # OAuth2 Proxy Configuration
        location /oauth2/ {
            proxy_pass         http://oauth2-proxy:4180/oauth2/;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;
        }

        # Protect API Routes
        # location /api/ {
        #     auth_request /oauth2/auth;
        #     error_page 401 = /oauth2/sign_in;

        #     proxy_pass         http://api:5000/api/;
        #     proxy_set_header   Host $host;
        #     proxy_set_header   X-Real-IP $remote_addr;
        #     proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header   X-Forwarded-Proto $scheme;
        # }

        # Protect Frontend Routes
        location / {
            auth_request /oauth2/auth;
            error_page 401 = /oauth2/sign_in;

            proxy_pass         http://web:3000/;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;

            # Pass authenticated user's email
            proxy_set_header X-User-Email $upstream_http_x_auth_request_user;
        }

        # Protect Proxy Routes
        location /proxy/ {
            auth_request /oauth2/auth;
            error_page 401 = /oauth2/sign_in;

            proxy_pass         http://proxy:1337/proxy/;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;
        }

        # Authentication Request Handling
        location = /oauth2/auth {
            internal;
            proxy_pass          http://oauth2-proxy:4180/auth;
            proxy_set_header    Host $host;
            proxy_set_header    X-Real-IP $remote_addr;
            proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header    X-Forwarded-Proto $scheme;
            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
        }

        # Sign-In Endpoint
        location = /oauth2/sign_in {
            return 302 https://localhost/oauth2/start?rd=https://$host$request_uri;
        }

        # Sign-Out Endpoint
        location /logout {
            return 302 https://localhost/oauth2/sign_out?rd=https://localhost/;
        }
    }
}