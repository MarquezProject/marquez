"use strict";(self.webpackChunkmarquez_website_docs=self.webpackChunkmarquez_website_docs||[]).push([[3652],{228:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>f,contentTitle:()=>u,default:()=>T,frontMatter:()=>d,metadata:()=>h,toc:()=>y});var i=s(87462),a=(s(67294),s(3905)),r=s(26389),o=s(94891),n=s(75190),c=s(47507),p=s(24310),l=s(63303),m=(s(75035),s(85162));const d={id:"get-sources",title:"List all sources",description:"Returns a list of sources.",sidebar_label:"List all sources",hide_title:!0,hide_table_of_contents:!0,api:{operationId:"getSources",parameters:[{name:"limit",in:"query",description:"The number of results to return from offset.",required:!1,schema:{type:"integer",example:25,default:100}},{name:"offset",in:"query",description:"The initial position from which to return results.",required:!1,schema:{type:"integer",default:0}}],description:"Returns a list of sources.",tags:["Sources"],responses:{200:{description:"OK",content:{"application/json":{schema:{type:"object",properties:{sources:{items:{type:"object",properties:{type:{description:"The type of the source.",type:"string"},name:{description:"The name of the source.",type:"string"},createdAt:{description:"An [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp representing the date/time the source was created.",type:"string",format:"date-time"},updatedAt:{description:"An [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp representing the date/time the source was updated.",type:"string",format:"date-time"},connectionUrl:{description:"The URL to the location of the source.",type:"string",format:"URL"},description:{description:"The description of the dataset.",type:"string"}},example:{type:"POSTGRESQL",name:"my-source",createdAt:"2019-05-09T19:49:24.201361Z",updatedAt:"2019-05-09T19:49:24.201361Z",connectionUrl:"jdbc:postgresql://db.example.com/mydb",description:"My first source!"},title:"Source"}}},title:"SourceList"}}}}},method:"get",path:"/sources",servers:[{url:"http://localhost:5000/api/v1",description:"Local API server"}],info:{title:"Marquez",version:"0.41.0-SNAPSHOT",description:"Marquez is an open source **metadata service** for the **collection**, **aggregation**, and **visualization** of a data ecosystem's metadata.",license:{name:"Apache 2.0",url:"http://www.apache.org/licenses/LICENSE-2.0.html"}},postman:{name:"List all sources",description:{content:"Returns a list of sources.",type:"text/plain"},url:{path:["sources"],host:["{{baseUrl}}"],query:[{disabled:!1,description:{content:"The number of results to return from offset.",type:"text/plain"},key:"limit",value:""},{disabled:!1,description:{content:"The initial position from which to return results.",type:"text/plain"},key:"offset",value:""}],variable:[]},header:[{key:"Accept",value:"application/json"}],method:"GET"}},sidebar_class_name:"get api-method",info_path:"docs/api/marquez",custom_edit_url:null},u=void 0,h={unversionedId:"api/get-sources",id:"api/get-sources",title:"List all sources",description:"Returns a list of sources.",source:"@site/docs/api/get-sources.api.mdx",sourceDirName:"api",slug:"/api/get-sources",permalink:"/docs/api/get-sources",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"get-sources",title:"List all sources",description:"Returns a list of sources.",sidebar_label:"List all sources",hide_title:!0,hide_table_of_contents:!0,api:{operationId:"getSources",parameters:[{name:"limit",in:"query",description:"The number of results to return from offset.",required:!1,schema:{type:"integer",example:25,default:100}},{name:"offset",in:"query",description:"The initial position from which to return results.",required:!1,schema:{type:"integer",default:0}}],description:"Returns a list of sources.",tags:["Sources"],responses:{200:{description:"OK",content:{"application/json":{schema:{type:"object",properties:{sources:{items:{type:"object",properties:{type:{description:"The type of the source.",type:"string"},name:{description:"The name of the source.",type:"string"},createdAt:{description:"An [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp representing the date/time the source was created.",type:"string",format:"date-time"},updatedAt:{description:"An [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp representing the date/time the source was updated.",type:"string",format:"date-time"},connectionUrl:{description:"The URL to the location of the source.",type:"string",format:"URL"},description:{description:"The description of the dataset.",type:"string"}},example:{type:"POSTGRESQL",name:"my-source",createdAt:"2019-05-09T19:49:24.201361Z",updatedAt:"2019-05-09T19:49:24.201361Z",connectionUrl:"jdbc:postgresql://db.example.com/mydb",description:"My first source!"},title:"Source"}}},title:"SourceList"}}}}},method:"get",path:"/sources",servers:[{url:"http://localhost:5000/api/v1",description:"Local API server"}],info:{title:"Marquez",version:"0.41.0-SNAPSHOT",description:"Marquez is an open source **metadata service** for the **collection**, **aggregation**, and **visualization** of a data ecosystem's metadata.",license:{name:"Apache 2.0",url:"http://www.apache.org/licenses/LICENSE-2.0.html"}},postman:{name:"List all sources",description:{content:"Returns a list of sources.",type:"text/plain"},url:{path:["sources"],host:["{{baseUrl}}"],query:[{disabled:!1,description:{content:"The number of results to return from offset.",type:"text/plain"},key:"limit",value:""},{disabled:!1,description:{content:"The initial position from which to return results.",type:"text/plain"},key:"offset",value:""}],variable:[]},header:[{key:"Accept",value:"application/json"}],method:"GET"}},sidebar_class_name:"get api-method",info_path:"docs/api/marquez",custom_edit_url:null},sidebar:"tutorialSidebar",previous:{title:"Retrieve a source",permalink:"/docs/api/get-source"},next:{title:"List all tags",permalink:"/docs/api/get-tags"}},f={},y=[{value:"List all sources",id:"list-all-sources",level:2}],g={toc:y},k="wrapper";function T(e){let{components:t,...s}=e;return(0,a.kt)(k,(0,i.Z)({},g,s,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"list-all-sources"},"List all sources"),(0,a.kt)("p",null,"Returns a list of sources."),(0,a.kt)("details",{style:{marginBottom:"1rem"},"data-collapsed":!1,open:!0},(0,a.kt)("summary",{style:{}},(0,a.kt)("strong",null,"Query Parameters")),(0,a.kt)("div",null,(0,a.kt)("ul",null,(0,a.kt)(n.Z,{className:"paramsItem",param:{name:"limit",in:"query",description:"The number of results to return from offset.",required:!1,schema:{type:"integer",example:25,default:100}},mdxType:"ParamsItem"}),(0,a.kt)(n.Z,{className:"paramsItem",param:{name:"offset",in:"query",description:"The initial position from which to return results.",required:!1,schema:{type:"integer",default:0}},mdxType:"ParamsItem"})))),(0,a.kt)("div",null,(0,a.kt)(r.Z,{mdxType:"ApiTabs"},(0,a.kt)(m.Z,{label:"200",value:"200",mdxType:"TabItem"},(0,a.kt)("div",null,(0,a.kt)("p",null,"OK")),(0,a.kt)("div",null,(0,a.kt)(o.Z,{schemaType:"response",mdxType:"MimeTabs"},(0,a.kt)(m.Z,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,a.kt)(l.Z,{mdxType:"SchemaTabs"},(0,a.kt)(m.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,a.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,a.kt)("summary",{style:{textAlign:"left"}},(0,a.kt)("strong",null,"Schema")),(0,a.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,a.kt)("ul",{style:{marginLeft:"1rem"}},(0,a.kt)(p.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,a.kt)("details",{style:{}},(0,a.kt)("summary",{style:{}},(0,a.kt)("strong",null,"sources"),(0,a.kt)("span",{style:{opacity:"0.6"}}," object[]")),(0,a.kt)("div",{style:{marginLeft:"1rem"}},(0,a.kt)("li",null,(0,a.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"}},"Array [")),(0,a.kt)(p.Z,{collapsible:!1,name:"type",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"The type of the source.",type:"string"},mdxType:"SchemaItem"}),(0,a.kt)(p.Z,{collapsible:!1,name:"name",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"The name of the source.",type:"string"},mdxType:"SchemaItem"}),(0,a.kt)(p.Z,{collapsible:!1,name:"createdAt",required:!1,schemaName:"date-time",qualifierMessage:void 0,schema:{description:"An [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp representing the date/time the source was created.",type:"string",format:"date-time"},mdxType:"SchemaItem"}),(0,a.kt)(p.Z,{collapsible:!1,name:"updatedAt",required:!1,schemaName:"date-time",qualifierMessage:void 0,schema:{description:"An [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp representing the date/time the source was updated.",type:"string",format:"date-time"},mdxType:"SchemaItem"}),(0,a.kt)(p.Z,{collapsible:!1,name:"connectionUrl",required:!1,schemaName:"URL",qualifierMessage:void 0,schema:{description:"The URL to the location of the source.",type:"string",format:"URL"},mdxType:"SchemaItem"}),(0,a.kt)(p.Z,{collapsible:!1,name:"description",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"The description of the dataset.",type:"string"},mdxType:"SchemaItem"}),(0,a.kt)("li",null,(0,a.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"}},"]")))))))),(0,a.kt)(m.Z,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,a.kt)(c.Z,{responseExample:'{\n  "sources": [\n    {\n      "type": "POSTGRESQL",\n      "name": "my-source",\n      "createdAt": "2019-05-09T19:49:24.201361Z",\n      "updatedAt": "2019-05-09T19:49:24.201361Z",\n      "connectionUrl": "jdbc:postgresql://db.example.com/mydb",\n      "description": "My first source!"\n    }\n  ]\n}',language:"json",mdxType:"ResponseSamples"}))))))))))}T.isMDXComponent=!0}}]);