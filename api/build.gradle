/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import com.github.jengelman.gradle.plugins.shadow.transformers.ServiceFileTransformer
import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id 'maven-publish'
    id 'signing'
}

ext {
    jdbi3Version = '3.28.0'
    prometheusVersion = '0.15.0'
    testcontainersVersion = '1.17.1'
    sentryVersion = '5.7.3'
}

dependencies {
    implementation project(':clients:java')
    implementation "io.dropwizard:dropwizard-core:${dropwizardVersion}"
    implementation "io.dropwizard:dropwizard-jdbi3:${dropwizardVersion}"
    implementation "io.dropwizard:dropwizard-json-logging:${dropwizardVersion}"
    implementation "io.dropwizard:dropwizard-http2:${dropwizardVersion}"
    implementation "io.dropwizard:dropwizard-assets:${dropwizardVersion}"
    implementation "io.prometheus:simpleclient:${prometheusVersion}"
    implementation "io.openlineage:openlineage-java:${openlineageVersion}"
    implementation "io.prometheus:simpleclient_dropwizard:${prometheusVersion}"
    implementation "io.prometheus:simpleclient_hotspot:${prometheusVersion}"
    implementation "io.prometheus:simpleclient_servlet:${prometheusVersion}"
    implementation "org.jdbi:jdbi3-core:${jdbi3Version}"
    implementation "org.jdbi:jdbi3-postgres:${jdbi3Version}"
    implementation "org.jdbi:jdbi3-sqlobject:${jdbi3Version}"
    implementation 'com.google.guava:guava:31.1-jre'
    implementation 'org.dhatim:dropwizard-sentry:2.0.29'
    implementation "io.sentry:sentry:${sentryVersion}"
    implementation 'org.flywaydb:flyway-core:8.5.10'
    implementation "org.postgresql:postgresql:${postgresqlVersion}"
    implementation 'com.graphql-java:graphql-java:18.1'
    implementation 'com.graphql-java-kickstart:graphql-java-servlet:12.0.0'

    testImplementation "io.dropwizard:dropwizard-testing:${dropwizardVersion}"
    testImplementation "org.jdbi:jdbi3-testing:${jdbi3Version}"
    testImplementation "org.junit.vintage:junit-vintage-engine:${junit5Version}"
    testImplementation "org.testcontainers:postgresql:${testcontainersVersion}"
    testImplementation "org.testcontainers:junit-jupiter:${testcontainersVersion}"
    testImplementation 'org.apache.httpcomponents:httpclient:4.5.13'
}

task testUnit(type: Test) {
    useJUnitPlatform {
        includeTags 'UnitTests'
    }
}

task testIntegration(type: Test) {
    useJUnitPlatform {
        includeTags 'IntegrationTests'
    }
}

task testDataAccess(type: Test) {
    useJUnitPlatform {
        includeTags 'DataAccessTests'
    }
}

test {
    useJUnitPlatform()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = 'io.github.marquezproject'
            artifactId = 'marquez-api'

            from components.java

            artifact sourceJar
            artifact javadocJar

            pom {
                name = 'marquez-api'
                description = 'Collect, aggregate, and visualize a data ecosystem\'s metadata'
                url = 'https://github.com/MarquezProject/marquez'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'marquezproject'
                        name = 'Marquez Project'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/MarquezProject/marquez.git'
                    developerConnection = 'scm:git:ssh://github.com:MarquezProject/marquez.git'
                    url = 'https://github.com/MarquezProject/marquez'
                }
            }
        }
    }

    processResources {
        filter ReplaceTokens, tokens: [
                "version": project.property("version")
        ]
    }

    repositories {
        maven {
            url = 'https://oss.sonatype.org/service/local/staging/deploy/maven2'
            credentials {
                username = System.getenv('SONATYPE_NEXUS_USERNAME')
                password = System.getenv('SONATYPE_NEXUS_PASSWORD')
            }
        }
    }
}

signing {
    required { isReleaseVersion }
    def signingKey = findProperty("signingKey")
    def signingPassword = findProperty("signingPassword")
    useInMemoryPgpKeys(signingKey, signingPassword)
    sign publishing.publications.mavenJava
}

application {
    mainClass = 'marquez.MarquezApp'
}

shadowJar {
    classifier = ''
    transform(ServiceFileTransformer)
    // Add LICENSE to Jar
    from(projectDir) {
        include 'LICENSE'
    }
    manifest {
        attributes(
                'Created-By': "Gradle ${gradle.gradleVersion}",
                'Built-By': System.getProperty('user.name'),
                'Build-Jdk': System.getProperty('java.version'),
                'Implementation-Title': project.name,
                'Implementation-Version': project.version,
                'Main-Class': application.mainClass)
    }
}

runShadow {
    args = ['server', '../marquez.yml']
}

tasks.distZip.dependsOn tasks.shadowJar
tasks.distTar.dependsOn tasks.shadowJar
tasks.startScripts.dependsOn tasks.shadowJar
tasks.shadowJar.dependsOn tasks.jar
