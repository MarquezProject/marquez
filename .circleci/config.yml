version: 2.1

# Define reusable config (see: https://yaml.org/spec/1.2/spec.html#id2765878)
checkout_project_root: &checkout_project_root
  # Override checkout path to project root (see: https://circleci.com/docs/2.0/configuration-reference/#checkout)
  checkout:
    path: ~/marquez

# Only trigger CI job on release (=X.Y.Z)
only-on-release: &only-on-release
  filters:
    tags:
      only: /^[0-9]+(\.[0-9]+){2}(-rc\.[0-9]+)?$/
    branches:
      ignore: /.*/

jobs:
  build-api:
    working_directory: ~/marquez
    machine: true
    environment:
      TESTCONTAINERS_RYUK_DISABLED: true
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-api-{{ .Branch }}-{{ .Revision }}
            - v1-api-{{ .Branch }}
      - run: ./.circleci/get-jdk17.sh
      - run: echo "checks.disable=true" > ~/.testcontainers.properties
      - run: |
          ./gradlew --no-daemon --stacktrace api:build -Dorg.gradle.jvmargs="\
          --add-exports jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED \
          --add-exports jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED \
          --add-exports jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED \
          --add-exports jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED \
          --add-exports jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED"
      - run: ./gradlew --no-daemon api:jacocoTestReport
      - run: bash <(curl -s https://codecov.io/bash)
      - store_test_results:
          path: api/build/test-results/test
      - store_artifacts:
          path: build/reports/tests/test
          destination: test-report
      - save_cache:
          key: v1-api-{{ .Branch }}-{{ .Revision }}
          paths:
            - ~/.gradle

  build-image-api:
    working_directory: ~/marquez
    machine: true
    steps:
      - checkout
      - run: ./.circleci/get-jdk17.sh
      - run: docker build --no-cache --tag "marquezproject/marquez:${CIRCLE_SHA1}" .
      - run: docker save -o marquez.tar "marquezproject/marquez:${CIRCLE_SHA1}"
      - store_artifacts:
          path: marquez.tar

  build-image-web:
    working_directory: ~/marquez/web
    machine: true
    steps:
      - *checkout_project_root
      - run: docker build --no-cache --tag "marquezproject/marquez-web:${CIRCLE_SHA1}" .
      - run: docker save -o marquez-web.tar "marquezproject/marquez-web:${CIRCLE_SHA1}"
      - store_artifacts:
          path: marquez-web.tar

  unit-test-web:
    working_directory: ~/marquez/web
    docker:
      - image: circleci/node:12.22.7
    environment:
      TZ: 'America/New_York'
    steps:
      - *checkout_project_root
      - restore_cache:
          keys:
            - v1-web-{{ .Branch }}-{{ .Revision }}
            - v1-web-{{ .Branch }}
      - run: npm install
      - run: npm run test
      - run: npm run build
      - save_cache:
          paths:
            - node_modules
          key: v1-web-{{ .Branch }}-{{ .Revision }}

  build-client-java:
    working_directory: ~/marquez
    docker:
      - image: circleci/openjdk:8-jdk
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-client-java-{{ .Branch }}-{{ .Revision }}
            - v1-client-java-{{ .Branch }}
      - run: ./gradlew --no-daemon --stacktrace clients:java:build
      - run: ./gradlew --no-daemon clients:java:jacocoTestReport
      - run: bash <(curl -s https://codecov.io/bash)
      - store_test_results:
          path: clients/java/build/test-results/test
      - store_artifacts:
          path: build/reports/tests/test
          destination: test-report
      - save_cache:
          key: v1-client-java-{{ .Branch }}-{{ .Revision }}
          paths:
            - ~/.gradle

  unit-test-client-python:
    working_directory: ~/marquez/clients/python
    docker:
      - image: circleci/python:3.6
    steps:
      - *checkout_project_root
      - run: pip install -e .[dev]
      - run: flake8
      - run: pytest --cov=marquez_python tests/
      - run: bash <(curl -s https://codecov.io/bash)

  build-client-python:
    working_directory: ~/marquez/clients/python
    docker:
      - image: circleci/python:3.6
    steps:
      - *checkout_project_root
      - run: python setup.py sdist bdist_wheel
      - persist_to_workspace:
          root: .
          paths:
            - ./dist/*.whl
            - ./dist/*.tar.gz

  build-integration-spark:
    working_directory: ~/marquez/integrations/spark
    docker:
      - image: circleci/openjdk:8-jdk
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-integration-spark-{{ .Branch }}-{{ .Revision }}
            - v1-integration-spark-{{ .Branch }}
      - run: ./gradlew --no-daemon --stacktrace :integrations:spark:build
      - run:
          when: on_fail
          command: cat integrations/spark/build/test-results/test/TEST-*.xml
      - run: ./gradlew --no-daemon :integrations:spark:jacocoTestReport
      - run: ./gradlew --no-daemon --stacktrace :integrations:spark:shadowJar # generate the fat jar
      - store_test_results:
          path: integrations/spark/build/test-results/test
      - store_artifacts:
          path: build/reports/tests/test
          destination: test-report
      - save_cache:
          key: v1-integration-spark-{{ .Branch }}-{{ .Revision }}
          paths:
            - ~/.gradle

  build-integration-airflow:
    working_directory: ~/marquez/integrations/airflow
    docker:
      - image: circleci/python:3.6
    steps:
      - *checkout_project_root
      - run: python setup.py sdist bdist_wheel
      - persist_to_workspace:
          root: .
          paths:
            - ./dist/*.whl
            - ./dist/*.tar.gz

  integration-test-integration-airflow:
    working_directory: ~/marquez/integrations/
    machine: true
    steps:
      - *checkout_project_root
      - run: ./../.circleci/get-docker-compose.sh
      - run: bash -c '(cd ~/marquez && docker build -t marquezproject/marquez . )'
      - run: docker build -f airflow/Dockerfile.tests -t marquez-airflow-base .
      - run: ./airflow/tests/integration/docker/up.sh

  lint-docs-api:
    working_directory: ~/marquez
    docker:
      - image: cimg/node:12.22.7
    steps:
      - checkout
      - run: npm install --prefix=${HOME}/.local --global redoc-cli
      - run: redoc-cli bundle spec/openapi.yml

  release-java:
    working_directory: ~/marquez
    machine: true
    environment:
      JDK8_HOME: /usr/lib/jvm/java-8-openjdk-amd64
    steps:
      - checkout
      - run: ./.circleci/get-jdk17.sh
      - run: |
          # Get, then decode the GPG private key used to sign *.jar
          export ORG_GRADLE_PROJECT_signingKey=$(echo $GPG_SIGNING_KEY | base64 -d)
          # Publish *.jar
          ./gradlew publish

  release-python:
    working_directory: ~/marquez
    docker:
      - image: circleci/python:3.6
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: pip install wheel twine
      - run: python -m twine upload --non-interactive --verbose --repository pypi dist/*

  release-docker:
    working_directory: ~/marquez
    machine: true
    steps:
      - checkout
      - run: ./docker/login.sh
      - run: ./docker/build-and-push.sh $CIRCLE_TAG

workflows:
  marquez:
    jobs:
      - build-api
      - build-image-api:
          requires:
            - build-api
      - build-image-web:
          requires:
            - unit-test-web
      - build-client-java
      - build-integration-airflow
      - build-integration-spark
      - integration-test-integration-airflow:
          requires:
            - build-integration-airflow
      - unit-test-web
      - unit-test-client-python
      - lint-docs-api
  release:
    jobs:
      - build-client-python:
          <<: *only-on-release
      - build-integration-airflow:
          <<: *only-on-release
      - release-java:
          <<: *only-on-release
          context: release
      - release-python:
          <<: *only-on-release
          context: release
          requires:
            - build-client-python
            - build-integration-airflow
      - release-docker:
          <<: *only-on-release
          context: release
