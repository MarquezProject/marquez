version: 2.1

# Define reusable config (see: https://yaml.org/spec/1.2/spec.html#id2765878)
checkout_project_root: &checkout_project_root
  # Override checkout path to project root (see: https://circleci.com/docs/2.0/configuration-reference/#checkout)
  checkout:
    path: ~/marquez

# Only trigger CI job on release (=X.Y.Z)
only-on-release: &only-on-release
  filters:
    tags:
      only: /^[0-9]+(\.[0-9]+){2}(-rc\.[0-9]+)?$/
    branches:
      ignore: /.*/

jobs:
  build-api:
    working_directory: ~/marquez
    machine: true
    environment:
      TESTCONTAINERS_RYUK_DISABLED: true
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-api-{{ .Branch }}-{{ .Revision }}
            - v1-api-{{ .Branch }}
      - run: ./.circleci/get-jdk11.sh
      - run: echo "checks.disable=true" > ~/.testcontainers.properties
      - run: ./gradlew --no-daemon --stacktrace api:build
      - run: ./gradlew --no-daemon api:jacocoTestReport
      - run: bash <(curl -s https://codecov.io/bash)
      - store_test_results:
          path: api/build/test-results/test
      - store_artifacts:
          path: build/reports/tests/test
          destination: test-report
      - save_cache:
          key: v1-api-{{ .Branch }}-{{ .Revision }}
          paths:
            - ~/.gradle

  test-web:
    working_directory: ~/marquez/web
    docker:
      - image: circleci/node:12.21.0
    environment:
      TZ: 'America/New_York'
    steps:
      - *checkout_project_root
      - restore_cache:
          keys:
            - v1-web-{{ .Branch }}-{{ .Revision }}
            - v1-web-{{ .Branch }}
      - run: npm install
      - run: npm run test
      - save_cache:
          paths:
            - node_modules
          key: v1-web-{{ .Branch }}-{{ .Revision }}

  build-client-java:
    working_directory: ~/marquez
    docker:
      - image: circleci/openjdk:8-jdk
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-client-java-{{ .Branch }}-{{ .Revision }}
            - v1-client-java-{{ .Branch }}
      - run: ./gradlew --no-daemon --stacktrace clients:java:build
      - run: ./gradlew --no-daemon clients:java:jacocoTestReport
      - run: bash <(curl -s https://codecov.io/bash)
      - store_test_results:
          path: clients/java/build/test-results/test
      - store_artifacts:
          path: build/reports/tests/test
          destination: test-report
      - save_cache:
          key: v1-client-java-{{ .Branch }}-{{ .Revision }}
          paths:
            - ~/.gradle

  test-client-python:
    working_directory: ~/marquez/clients/python
    docker:
      - image: circleci/python:3.6
    steps:
      - *checkout_project_root
      - run: pip install -e .[dev]
      - run: flake8
      - run: pytest --cov=marquez_python tests/
      - run: bash <(curl -s https://codecov.io/bash)

  build-client-python:
    working_directory: ~/marquez/clients/python
    docker:
      - image: circleci/python:3.6
    steps:
      - *checkout_project_root
      - run: python setup.py bdist_wheel
      - persist_to_workspace:
          root: python/dist/
          paths:
            - ./*

  build-integration-spark:
    working_directory: ~/marquez/integrations/spark
    docker:
      - image: circleci/openjdk:8-jdk
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-integration-spark-{{ .Branch }}-{{ .Revision }}
            - v1-integration-spark-{{ .Branch }}
      - run: ./gradlew --no-daemon --stacktrace :integrations:spark:build
      - run:
          when: on_fail
          command: cat integrations/spark/build/test-results/test/TEST-*.xml
      - run: ./gradlew --no-daemon :integrations:spark:jacocoTestReport
      - store_test_results:
          path: integrations/spark/build/test-results/test
      - store_artifacts:
          path: build/reports/tests/test
          destination: test-report
      - save_cache:
          key: v1-integration-spark-{{ .Branch }}-{{ .Revision }}
          paths:
            - ~/.gradle

  test-integration-airflow:
    working_directory: ~/marquez/integrations/airflow
    docker:
      - image: circleci/python:3.6
    steps:
      - *checkout_project_root
      - run: pip install -e .[dev]
      - run: flake8 --exclude integration
      - run: airflow initdb
      - run: python -m pytest --cov=marquez_airflow tests/
      - run: pytest --cov=marquez_airflow tests/
      - run: bash <(curl -s https://codecov.io/bash)

  build-integration-airflow:
    working_directory: ~/marquez/integrations/airflow
    docker:
      - image: circleci/python:3.6
    steps:
      - *checkout_project_root
      - run: python setup.py bdist_wheel
      - persist_to_workspace:
          root: python/dist/
          paths:
            - ./*

  integration-test-airflow:
    working_directory: ~/marquez/integrations/airflow
    machine: true
    steps:
      - *checkout_project_root
      - run: ./../../.circleci/get-docker-compose.sh
      - run: docker build -f Dockerfile.tests -t marquez-airflow-base .
      - run: ./tests/integration/docker/up.sh

  release-java:
    working_directory: ~/marquez
    machine: true
    steps:
      - checkout
      - run: ./.circleci/get-jdk11.sh
      - run: ./gradlew --no-daemon -x test :api:release -Prelease.useAutomaticVersion=true
      - run: ./gradlew --no-daemon -x test :clients:java:release -Prelease.useAutomaticVersion=true
      - run: ./gradlew --no-daemon -x test :integrations:spark:release -Prelease.useAutomaticVersion=true
      - run: ./gradlew publish


  release-docker:
    working_directory: ~/marquez
    machine: true
    steps:
      - checkout
      - run: ./.circleci/get-jdk11.sh
      - run: ./.circleci/replace-gradle-version.sh $CIRCLE_TAG gradle.properties api/gradle.properties
      - run: ./docker/login.sh
      - run: ./docker/build-and-push.sh $CIRCLE_TAG

  release-python:
    working_directory: ~/marquez
    docker:
      - image: circleci/python:3.6
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run: pip install wheel twine
      - run: python -m twine upload --non-interactive --repository pypi /tmp/workspace/python/*

workflows:
  marquez:
    jobs:
      - build-api
      - test-web
      - build-client-java
      - build-integration-spark
      - test-client-python
      - build-client-python:
          <<: *only-on-release
      - test-integration-airflow
      - integration-test-airflow:
          requires:
            - test-integration-airflow
      - build-integration-airflow:
          <<: *only-on-release
      - release-java:
          <<: *only-on-release
      - release-python:
          <<: *only-on-release
      - release-docker:
          <<: *only-on-release
