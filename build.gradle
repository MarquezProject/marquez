import com.github.jengelman.gradle.plugins.shadow.transformers.ServiceFileTransformer

plugins {
  id 'application'
  id 'checkstyle'
  id 'jacoco'
  id 'java'
  id 'com.adarshr.test-logger' version '2.0.0'
  id 'com.diffplug.gradle.spotless' version '3.27.0'
  id 'com.github.jk1.dependency-license-report' version '1.11'
  id 'com.github.johnrengelman.shadow' version '5.1.0'
  id 'net.researchgate.release' version '2.8.0'
}

repositories {
  mavenLocal()
  mavenCentral()
}

ext {
  dropwizardVersion = '2.0.9'
  jdbi3Version = '3.13.0'
  lombokVersion = '1.18.12'
  prometheusVersion = '0.9.0'
}

dependencies {
  compile "io.dropwizard:dropwizard-core:${dropwizardVersion}"
  compile "io.dropwizard:dropwizard-jdbi3:${dropwizardVersion}"
  compile "io.dropwizard:dropwizard-json-logging:${dropwizardVersion}"
  compile "io.prometheus:simpleclient:${prometheusVersion}"
  compile "io.prometheus:simpleclient_dropwizard:${prometheusVersion}"
  compile "io.prometheus:simpleclient_hotspot:${prometheusVersion}"
  compile "io.prometheus:simpleclient_servlet:${prometheusVersion}"
  compile "org.jdbi:jdbi3-postgres:${jdbi3Version}"
  compile "org.jdbi:jdbi3-sqlobject:${jdbi3Version}"
  compile 'com.google.guava:guava:28.0-jre'
  compile 'org.flywaydb:flyway-core:6.3.0'
  compile 'org.postgresql:postgresql:42.2.5'
  compileOnly "org.projectlombok:lombok:${lombokVersion}"
  annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

  testCompile "io.dropwizard:dropwizard-testing:${dropwizardVersion}"
  testCompile 'io.github.marquezproject:marquez-java:0.4.0'
  testCompile "org.jdbi:jdbi3-testing:${jdbi3Version}"
  testCompile 'junit:junit:4.12'
  testCompile 'org.assertj:assertj-core:3.11.1'
  testCompile 'org.mockito:mockito-core:3.3.3'
  testCompile 'org.testcontainers:postgresql:1.13.0'
}

compileJava {
  options.incremental = true
  options.compilerArgs << '-parameters'
}

compileTestJava {
  options.incremental = true
  options.compilerArgs << '-parameters'
}

task testUnit(type: Test) {
  useJUnit {
    includeCategories 'marquez.UnitTests'
  }
}

task testIntegration(type: Test) {
  useJUnit {
    includeCategories 'marquez.IntegrationTests'
  }
}

task testDataAccess(type: Test) {
  useJUnit {
    includeCategories 'marquez.DataAccessTests'
  }
}

mainClassName = 'marquez.MarquezApp'

shadowJar {
  baseName = project.name
  classifier = ''
  version = project.version
  transform(ServiceFileTransformer)
  manifest {
    attributes(
      'Created-By': "Gradle ${gradle.gradleVersion}",
      'Built-By': System.getProperty('user.name'),
      'Build-Jdk': System.getProperty('java.version'),
      'Implementation-Title': project.name,
      'Implementation-Version': project.version,
      'Main-Class': mainClassName)
  }
}

runShadow {
  args = ['server', 'config.yml']
}

spotless {
  java {
    googleJavaFormat()
    removeUnusedImports()
  }
}

def reportsDir = "${buildDir}/reports";

def checkstyleDir = "${reportsDir}/checkstyle";

checkstyle {
  toolVersion = '8.12'
  configFile = rootProject.file('checkstyle.xml')
}

task checkstyle(type: Checkstyle) {
  reports {
    xml.enabled = true
    html.enabled = true
    html.destination = file(checkstyleDir)
  }
}

checkstyleMain {
  source = 'src/main/java'
}

checkstyleTest {
  source = 'src/test/java'
}

def coverageDir = "${reportsDir}/coverage";

jacoco {
  toolVersion = '0.8.5'
  reportsDir = file(coverageDir)
}

jacocoTestReport {
  reports {
    xml.enabled = true
    html.enabled = true
    html.destination = file(coverageDir)
  }
}
