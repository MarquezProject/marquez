openapi: 3.0.2
info:
  title: Marquez
  version: 0.12.0
  description: Marquez is an open source **metadata service** for the **collection**, **aggregation**,
    and **visualization** of a data ecosystem's metadata.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: http://localhost:5000/api/v1
    description: Local API server
paths:
  /namespaces/{namespace}:
    parameters:
      - $ref: '#/components/parameters/namespace'
    put:
      summary: Create a namespace
      description: Creates a new namespace object. A namespace enables the contextual grouping of related
        jobs and datasets. Namespaces must contain only letters (`a-z`, `A-Z`), numbers (`0-9`),
        underscores (`_`), or dots (`.`). A namespace is case-insensitive with a maximum length of `1024` characters.
        Note jobs and datasets will be unique within a namespace, but not across namespaces.
      tags:
        - Namespaces
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/newNamespace'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/namespace'
    get:
      summary: Retrieve a namespace
      description: Returns a namespace.
      tags:
        - Namespaces
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/namespace'

  /namespaces:
    get:
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      summary: List all namespaces
      description: Returns a list of namespaces.
      tags:
        - Namespaces
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/namespaces'

  /sources/{source}:
    parameters:
      - $ref: '#/components/parameters/source'
    put:
      summary: Create a source
      description: Creates a new source object. A source is the physical location of a dataset such as
        a table in PostgreSQL, or topic in Kafka. A source enables the grouping of physical datasets
        to their physical source.
      tags:
        - Sources
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/newSource'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/source'
    get:
      summary: Retrieve a source
      description: Returns a source.
      tags:
        - Sources
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/source'

  /sources:
    get:
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      summary: List all sources
      description: Returns a list of sources.
      tags:
        - Sources
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sources'

  /namespaces/{namespace}/datasets/{dataset}:
    parameters:
      - $ref: '#/components/parameters/namespace'
      - $ref: '#/components/parameters/dataset'
    put:
      summary: Create a dataset
      description: Creates a new dataset.
      tags:
        - Datasets
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/DB_TABLE'
                - $ref: '#/components/schemas/STREAM'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dataset'
    get:
      summary: Retrieve a dataset
      description: Returns a dataset.
      tags:
        - Datasets
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dataset'

  /namespaces/{namespace}/datasets/{dataset}/versions/{version}:
    parameters:
      - $ref: '#/components/parameters/namespace'
      - $ref: '#/components/parameters/dataset'
      - $ref: '#/components/parameters/version'
    get:
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      summary: Retrieve a version for a dataset
      description: Returns a version for a dataset.
      tags:
        - Datasets
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/datasetVersion'

  /namespaces/{namespace}/datasets/{dataset}/versions:
    parameters:
      - $ref: '#/components/parameters/namespace'
      - $ref: '#/components/parameters/dataset'
    get:
      summary: List all versions for a dataset
      description: Returns a list of versions for a dataset.
      tags:
        - Datasets
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/datasetVersions'

  /namespaces/{namespace}/datasets:
    parameters:
      - $ref: '#/components/parameters/namespace'
      - $ref: '#/components/parameters/dataset'
    get:
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      summary: List all datasets
      description: Returns a list of datasets.
      tags:
        - Datasets
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/datasets'

  /namespaces/{namespace}/datasets/{dataset}/tags/{tag}:
    parameters:
      - $ref: '#/components/parameters/namespace'
      - $ref: '#/components/parameters/dataset'
      - $ref: '#/components/parameters/tag'
    post:
      summary: Tag a dataset
      description: Tag an existing dataset.
      tags:
        - Datasets
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dataset'

  /namespaces/{namespace}/datasets/{dataset}/fields/{field}/tags/{tag}:
    parameters:
      - $ref: '#/components/parameters/namespace'
      - $ref: '#/components/parameters/dataset'
      - $ref: '#/components/parameters/field'
      - $ref: '#/components/parameters/tag'
    post:
      summary: Tag a field
      description: Tag an existing field of a dataset.
      tags:
        - Datasets
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dataset'

  /namespaces/{namespace}/jobs/{job}:
    parameters:
      - $ref: '#/components/parameters/namespace'
      - $ref: '#/components/parameters/job'
    put:
      summary: Create a job
      description: Creates a new job object. All job objects are immutable and are uniquely identified by a generated ID.
        Marquez will create a version of a job each time the contents of the object is modified. For example, the `location`
        of a job may change over time resulting in new versions. The accumulated versions can be listed, used to rerun a
        specific job version or possibly help debug a failed job run.
      tags:
        - Jobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/newJob'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/job'
    get:
      summary: Retrieve a job
      description: Retrieve a job.
      tags:
        - Jobs
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/job'

  /namespaces/{namespace}/jobs:
    parameters:
      - $ref: '#/components/parameters/namespace'
    get:
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      summary: List all jobs
      description: Returns a list of jobs.
      tags:
        - Jobs
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jobs'

  /namespaces/{namespace}/jobs/{job}/runs:
    parameters:
      - $ref: '#/components/parameters/namespace'
      - $ref: '#/components/parameters/job'
    post:
      summary: Create a run
      description: Creates a new run object for a job.
      tags:
        - Jobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/newRun'
      responses:
        '201':
          description: CREATED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runAsNew'
    get:
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      summary: List all runs
      description: Returns a list of runs for a job.
      tags:
        - Jobs
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runs'

  /jobs/runs/{id}:
    parameters:
      - $ref: '#/components/parameters/runId'
    get:
      summary: Retrieve a run
      description: Retrieve a run.
      tags:
        - Jobs
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runAsNew'

  /jobs/runs/{id}/start:
    parameters:
      - $ref: '#/components/parameters/runId'
      - $ref: '#/components/parameters/at'
    post:
      summary: Start a run
      description: Marks the run as `RUNNING`.
      tags:
        - Jobs
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runAsRunning'

  /jobs/runs/{id}/complete:
    parameters:
      - $ref: '#/components/parameters/runId'
      - $ref: '#/components/parameters/at'
    post:
      summary: Complete a run
      description: Marks the run as `COMPLETED`.
      tags:
        - Jobs
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runAsCompleted'

  /jobs/runs/{id}/fail:
    parameters:
      - $ref: '#/components/parameters/runId'
      - $ref: '#/components/parameters/at'
    post:
      summary: Fail a run
      description: Marks the run as `FAILED`.
      tags:
        - Jobs
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runAsFailed'

  /jobs/runs/{id}/abort:
    parameters:
      - $ref: '#/components/parameters/runId'
      - $ref: '#/components/parameters/at'
    post:
      summary: Abort a run
      description: Marks the run as `ABORTED`.
      tags:
        - Jobs
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runAsAborted'

  /tags:
    get:
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      summary: List all tags
      description: Returns a list of tags.
      tags:
        - Tags
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tags'

components:
  parameters:
    at:
      name: at
      in: query
      description: An [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp representing the time when the run transitioned.
      required: false
      schema:
        type: string
        format: date-time

    namespace:
      name: namespace
      in: path
      description: The name of the namespace.
      required: true
      schema:
        type: string
        maxLength: 1024
        example: my-namespace

    source:
      name: source
      in: path
      description: The name of the source.
      required: true
      schema:
        type: string
        maxLength: 1024
        example: my-source

    dataset:
      name: dataset
      in: path
      description: The name of the dataset.
      required: true
      schema:
        type: string
        maxLength: 1024
        example: my-dataset

    tag:
      name: tag
      in: path
      description: The name of the tag.
      required: true
      schema:
        type: string
        example: SENSITIVE

    field:
      name: field
      in: path
      description: The name of the field.
      required: true
      schema:
        type: string
        example: my_field

    job:
      name: job
      in: path
      description: The name of the job.
      required: true
      schema:
        type: string
        maxLength: 1024
        example: my-job

    runId:
      name: id
      in: path
      description: The ID of the run.
      required: true
      schema:
        type: string
        format: uuid
        example: ea9badc5-7cb2-49af-9a9f-155771d3a797

    version:
      name: version
      in: path
      description: The ID of the dataset version.
      required: true
      schema:
        type: string
        format: uuid
        example: ea9badc5-7cb2-49af-9a9f-155771d3a797

    limit:
      name: limit
      in: query
      description: The number of results to return from offset
      required: false
      schema:
        type: integer
        example: 25
        default: 100

    offset:
      name: offset
      in: query
      description: The initial position from which to return results
      required: false
      schema:
        type: integer
        default: 0

  schemas:
    newNamespace:
      type: object
      properties:
        ownerName:
          description: The owner of the namespace.
          type: string
        description:
          description: The description of the namespace.
          type: string
      required:
        - ownerName
      example:
        ownerName: me
        description: My first namespace!

    namespace:
      type: object
      properties:
        name:
          description: The name of the namespace.
          type: string
        createdAt:
          description: An [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp representing the date/time the namespace was created.
          type: string
          format: date-time
        updatedAt:
          description: An [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp representing the date/time the namespace was updated.
          type: string
          format: date-time
        ownerName:
          description: The owner of the namespace.
          type: string
        description:
          description: The description of the namespace.
          type: string
      example:
        name: my-namespace
        createdAt: 2019-05-09T19:49:24.201361Z
        updatedAt: 2019-05-09T19:49:24.201361Z
        ownerName: me
        description: My first namespace!

    namespaces:
      type: object
      properties:
        namespaces:
          type: array
          items:
            $ref: '#/components/schemas/namespace'

    newSource:
      type: object
      properties:
        type:
          description: The type of the source.
          type: string
        connectionUrl:
          description: The URL to be used to connect to the source.
          type: string
          format: URL
        description:
          description:  The description of the source.
          type: string
      required:
        - type
        - connectionUrl
      example:
        type: POSTGRESQL
        connectionUrl: jdbc:postgresql://db.example.com/mydb
        description: My first source!

    source:
      type: object
      properties:
        type:
          description: The type of the source.
          type: string
        name:
          description: The name of the source.
          type: string
        createdAt:
          description: An [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp representing the date/time the source was created.
          type: string
          format: date-time
        updatedAt:
          description: An [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp representing the date/time the source was updated.
          type: string
          format: date-time
        connectionUrl:
          description: The URL to be used to connect to the source.
          type: string
          format: URL
        description:
          description:  The description of the dataset.
          type: string
      example:
        type: POSTGRESQL
        name: my-source
        createdAt: 2019-05-09T19:49:24.201361Z
        updatedAt: 2019-05-09T19:49:24.201361Z
        connectionUrl: jdbc:postgresql://db.example.com/mydb
        description: My first source!

    sources:
      type: object
      properties:
        sources:
          items:
            $ref: '#/components/schemas/source'

    DB_TABLE:
      type: object
      properties:
        type:
          description: The type of the dataset.
          type: string
          enum: [DB_TABLE]
        physicalName:
          description: The **physical** name of the table.
          type: string
        sourceName:
          description: The name of the source associated with the table.
          type: string
        fields:
          description: The fields of the table.
          type: array
          items:
            type: object
            properties:
              name:
                description: The name of the field.
                type: string
              type:
                $ref: '#/components/schemas/fieldType'
              tags:
                description: List of tags.
                type: array
                items:
                  $ref: '#/components/schemas/tag'
              description:
                description: The description of the field.
                type: string
            required:
              - name
              - type
        tags:
          description: List of tags.
          type: array
          items:
            $ref: '#/components/schemas/tag'
        description:
          description:  The description of the table.
          type: string
        runId:
          description: The ID associated with the run modifying the table.
          type: string
        facets:
          $ref: '#/components/schemas/datasetFacets'
      required:
        - type
        - physicalName
        - sourceName
        - fields
      example:
        type: DB_TABLE
        physicalName: public.mytable
        sourceName: my-source
        fields: [
          {'name': 'a', 'type': 'INTEGER'},
          {'name': 'b', 'type': 'TIMESTAMP'},
          {'name': 'c', 'type': 'INTEGER'},
          {'name': 'd', 'type': 'INTEGER'}
        ]
        description: "My first dataset!"
        facets: {
          'context': {
            '_producer': 'https://github.com/OpenLineage/OpenLineage/blob/v1-0-0/client',
            '_schemaURL': 'https://github.com/OpenLineage/OpenLineage/blob/v1-0-0/spec/OpenLineage.yml#MyCustomJobFacet'
          }
        }

    STREAM:
      type: object
      properties:
        type:
          description: The type of the dataset.
          type: string
          enum: [STREAM]
        physicalName:
          description: The **physical** name of the stream.
          type: string
        sourceName:
          description: The name of the source associated with the stream.
          type: string
        schemaLocation:
          description: The URL of the schema for the stream data.
          type: string
        fields:
          description: The schema fields for the stream data.
          type: array
          items:
            type: object
            properties:
              name:
                description: The name of the field.
                type: string
              type:
                description: The type of the field.
                type: string
              tags:
                description: List of tags.
                type: array
                items:
                  $ref: '#/components/schemas/tag'
              description:
                description: The description of the field.
                type: string
            required:
              - name
              - type
        tags:
          description: List of tags.
          type: array
          items:
            $ref: '#/components/schemas/tag'
        description:
          description: The description of the stream.
          type: string
        runId:
          description: The ID associated with the run modifying the stream.
          type: string
        facets:
          $ref: '#/components/schemas/datasetFacets'
      required:
        - type
        - physicalName
        - sourceName
        - fields
        - schemaLocation
      example:
        type: STREAM
        physicalName: my-stream
        sourceName: my-stream-source
        schemaLocation: 'http://registry.example.com/schemas/ids/1'
        fields: []
        description: "My first stream dataset!"
        facets: {
          'context': {
            '_producer': 'https://github.com/OpenLineage/OpenLineage/blob/v1-0-0/client',
            '_schemaURL': 'https://github.com/OpenLineage/OpenLineage/blob/v1-0-0/spec/OpenLineage.yml#MyCustomJobFacet'
          }
        }

    dataset:
      type: object
      properties:
        id:
          description: The ID of the dataset.
          type: object
          properties:
            namespace:
              type: string
              description: The namespace of the dataset.
            name:
              type: string
              description: The name of the dataset.
        type:
          description: The type of the dataset.
          type: string
        name:
          description: The **logical** name of the dataset.
          type: string
        physicalName:
          description: The **physical** name of the dataset.
          type: string
        createdAt:
          description: An [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp representing the date/time the dataset was created.
          type: string
          format: date-time
        updatedAt:
          description: An [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp representing the date/time the dataset was updated.
          type: string
          format: date-time
        namespace:
          type: string
          description: The namespace of the dataset.
        sourceName:
          description: The name of the source associated with the dataset.
          type: string
        fields:
          description: The fields of the dataset.
          type: array
          items:
            type: object
            properties:
              name:
                description: The name of the field.
                type: string
              type:
                $ref: '#/components/schemas/fieldType'
              tags:
                description: List of tags.
                type: array
                items:
                  $ref: '#/components/schemas/tag'
              description:
                description: The description of the field.
                type: string
        tags:
          description: List of tags.
          type: array
          items:
            $ref: '#/components/schemas/tag'
        lastModifiedAt:
          description: An [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp representing the date/time the dataset was last modified by a successful run.
          type: string
          format: date-time
        description:
          description:  The description of the dataset.
          type: string
        facets:
          $ref: '#/components/schemas/datasetFacets'
      example:
        id:
          namespace: my-namespace
          name: my-dataset
        type: DB_TABLE
        name: my-dataset
        physicalName: public.mytable
        createdAt: 2019-05-09T19:49:24.201361Z
        upodatedAt: 2019-05-09T19:49:24.201361Z
        namespace: my-namespace
        sourceName: my-source
        fields: [
          {'name': 'a', 'type': 'INTEGER', 'tags': []},
          {'name': 'b', 'type': 'TIMESTAMP', 'tags': []},
          {'name': 'c', 'type': 'INTEGER', 'tags': []},
          {'name': 'd', 'type': 'INTEGER', 'tags': []}
        ]
        tags: []
        lastModifiedAt: null
        description: "My first dataset!"
        facets: {
          'context': {
            '_producer': 'https://github.com/OpenLineage/OpenLineage/blob/v1-0-0/client',
            '_schemaURL': 'https://github.com/OpenLineage/OpenLineage/blob/v1-0-0/spec/OpenLineage.yml#MyCustomJobFacet'
          }
        }

    datasets:
      type: object
      properties:
        datasets:
          items:
            $ref: '#/components/schemas/dataset'

    datasetVersion:
      type: object
      properties:
        id:
          description: The ID of the dataset.
          type: object
          properties:
            namespace:
              type: string
              description: The namespace of the dataset.
            name:
              type: string
              description: The name of the dataset.
        type:
          description: The type of the dataset.
          type: string
        name:
          description: The **logical** name of the dataset.
          type: string
        physicalName:
          description: The **physical** name of the dataset.
          type: string
        createdAt:
          description: An [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp representing the date/time the dataset was created.
          type: string
          format: date-time
        version:
          description: The ID of the dataset version.
          type: string
        namespace:
          type: string
          description: The namespace of the dataset.
        sourceName:
          description: The name of the source associated with the dataset.
          type: string
        fields:
          description: The fields of the dataset.
          type: array
          items:
            type: object
            properties:
              name:
                description: The name of the field.
                type: string
              type:
                $ref: '#/components/schemas/fieldType'
              tags:
                description: List of tags.
                type: array
                items:
                  $ref: '#/components/schemas/tag'
              description:
                description: The description of the field.
                type: string
        tags:
          description: List of tags.
          type: array
          items:
            $ref: '#/components/schemas/tag'
        description:
          description:  The description of the dataset.
          type: string
        createdByRun:
          description: The run associated with the dataset version.
          type: object
          properties:
            id:
              description: The ID of the run.
              type: string
              format: uuid
            createdAt:
              description: An [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp representing the date/time the run was created.
              type: string
              format: date-time
            updatedAt:
              description: An [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp representing the date/time the run was updated.
              type: string
              format: date-time
            nominalStartTime:
              description: An [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp representing the nominal start time of the run.
              type: string
              format: date-time
            nominalEndTime:
              description: An [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp representing the nominal end time of the run.
              type: string
              format: date-time
            state:
              description: The current state of the run.
              type: string
              enum: [ NEW, RUNNING, COMPLETED, FAILED, ABORTED ]
            startedAt:
              type: integer
              description: The time at which the run was started. Measured in seconds since the Unix epoch.
            endedAt:
              type: integer
              description: The time at which the run was ended. Measured in seconds since the Unix epoch.
            durationMs:
              type: integer
              description: The total duration of the run. Measured in milliseconds.
            args:
              description: The arguments of the run.
              type: object
      example:
        id:
          namespace: my-namespace
          name: my-dataset
        type: DB_TABLE
        name: my-dataset
        physicalName: public.mytable
        createdAt: 2019-05-09T19:49:24.201361Z
        version: d224dac0-35d7-4d9b-bbbe-6fff1a8485ad
        namespace: my-namespace
        sourceName: my-source
        fields: [
          {'name': 'a', 'type': 'INTEGER', 'tags': []},
          {'name': 'b', 'type': 'TIMESTAMP', 'tags': []},
          {'name': 'c', 'type': 'INTEGER', 'tags': []},
          {'name': 'd', 'type': 'INTEGER', 'tags': []}
        ]
        tags: []
        description: "My first dataset!"
        createdByRun: {
          "id": "0e89b60a-d80d-42ae-a12b-bd79ae1fb576",
          "createdAt": "2019-05-09T18:52:35.620763Z",
          "updatedAt": "2019-05-09T18:53:41.461122Z",
          "nominalStartTime": null,
          "nominalEndTime": null,
          "state": "COMPLETED",
          "startedAt": "2021-02-05T18:53:33.245492Z",
          "endedAt": "2021-02-05T18:53:41.461122Z",
          "durationMs": 8216,
          "args": { 'email': 'me@example.com', 'emailOnFailure': false, 'emailOnRetry': true, 'retries': 1 }
        }

    datasetVersions:
      type: object
      properties:
        datasets:
          items:
            $ref: '#/components/schemas/datasetVersion'

    tag:
      type: object
      properties:
        name:
          description: The name of the tag.
          type: string
        description:
          description: The description of the tag.
          type: string
      example:
        name: SENSITIVE
        description: Contains sensitive information

    tags:
      type: object
      properties:
        tags:
          items:
            $ref: '#/components/schemas/tag'
    newJob:
      type: object
      properties:
        id:
          description: The ID of the job.
          type: object
          properties:
            namespace:
              type: string
              description: The namespace of the job.
            name:
              type: string
              description: The name of the job.
        type:
          description: The type of the job.
          type: string
          enum: [BATCH, STREAM, SERVICE]
        inputs:
          description: The set of **input** datasets.
          type: array
          items:
            type: object
            properties:
              namespace:
                type: string
                description: The namespace of the **input** dataset.
              name:
                type: string
                description: The name of the **input** dataset.
          uniqueItems: true
        outputs:
          description: The set of **output** datasets.
          type: array
          items:
            type: object
            properties:
              namespace:
                type: string
                description: The namespace of the **output** dataset.
              name:
                type: string
                description: The name of the **output** dataset.
          uniqueItems: true
        location:
          description: The URL of the job source code or artifact.
          type: string
          format: URL
        context:
          description: A key/value pair that must be of type `string`. A context can be used for getting additional details about the job.
          type: object
        description:
          description: The description of the job.
          type: string
        runId:
          description: An _optional_ run ID used to associate a job version to an existing job run.
          type: string
        facets:
          $ref: '#/components/schemas/jobFacets'
      required:
        - type
        - inputs
        - outputs
      example:
        type: BATCH
        inputs: [{ namespace: my-namespace, name: my-dataset}]
        outputs: []
        location: https://github.com/my-jobs/blob/124f6089ad4c5fcbb1d7b33cbb5d3a9521c5d32c
        context: {'SQL': "SELECT * FROM mytable;"}
        description: My first job!
        facets: {
          'context': {
            '_producer': 'https://github.com/OpenLineage/OpenLineage/blob/v1-0-0/client',
            '_schemaURL': 'https://github.com/OpenLineage/OpenLineage/blob/v1-0-0/spec/OpenLineage.yml#MyCustomJobFacet'
          }
        }

    job:
      type: object
      properties:
        id:
          description: The ID of the job.
          type: object
          properties:
            namespace:
              type: string
              description: The namespace of the job.
            name:
              type: string
              description: The name of the job.
        type:
          description: The type of the job.
          type: string
        name:
          description: The name of the job.
          type: string
        createdAt:
          description: An [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp representing the date/time the job was created.
          type: string
          format: date-time
        updatedAt:
          description: An [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp representing the date/time the job was updated.
          type: string
          format: date-time
        namespace:
          description: The namespace of the job.
          type: string
        inputs:
          description: The set of **input** datasets.
          type: array
          items:
            type: object
            properties:
              namespace:
                type: string
                description: The namespace of the **input** dataset.
              name:
                type: string
                description: The name of the **input** dataset.
          uniqueItems: true
        outputs:
          description: The set of **output** datasets.
          type: array
          items:
            type: object
            properties:
              namespace:
                type: string
                description: The namespace of the **output** dataset.
              name:
                type: string
                description: The name of the **output** dataset.
          uniqueItems: true
        location:
          description: The URL of the job source code or artifact.
          type: string
          format: URL
        context:
          description: Deprecated- Use facet. A key/value pair that must be of type `string`. A context can be used for getting additional details about the job.
          type: object
          deprecated: true
        description:
          description: The description of the job.
          type: string
        latestRun:
          description: The latest run of the job.
          type: object
          properties:
            id:
              description: The ID of the run.
              type: string
              format: uuid
            createdAt:
              description: An [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp representing the date/time the run was created.
              type: string
              format: date-time
            updatedAt:
              description: An [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp representing the date/time the run was updated.
              type: string
              format: date-time
            nominalStartTime:
              description: An [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp representing the nominal start time of the run.
              type: string
              format: date-time
            nominalEndTime:
              description: An [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp representing the nominal end time of the run.
              type: string
              format: date-time
            state:
              description: The current state of the run.
              type: string
              enum: [NEW, RUNNING, COMPLETED, FAILED, ABORTED]
            startedAt:
              type: integer
              description: The time at which the run was started. Measured in seconds since the Unix epoch.
            endedAt:
              type: integer
              description: The time at which the run was ended. Measured in seconds since the Unix epoch.
            durationMs:
              type: integer
              description: The total duration of the run. Measured in milliseconds.
            args:
              description: The arguments of the run.
              type: object
            facets:
              $ref: '#/components/schemas/runFacets'
        facets:
          $ref: '#/components/schemas/jobFacets'
      example:
        id:
          namespace: my-namespace
          name: my-job
        type: BATCH
        name: my-job
        createdAt: 2019-05-09T19:49:24.201361Z
        updatedAt: 2019-05-09T19:49:24.201361Z
        namespace: my-namespace
        inputs: [{namespace: my-namespace, name: my-dataset}]
        outputs: []
        location: https://github.com/my-jobs/blob/124f6089ad4c5fcbb1d7b33cbb5d3a9521c5d32c
        context: {'SQL': "SELECT * FROM mytable;"}
        description: My first job!
        latestRun: null
        facets: {
          'context': {
            '_producer': 'https://github.com/OpenLineage/OpenLineage/blob/v1-0-0/client',
            '_schemaURL': 'https://github.com/OpenLineage/OpenLineage/blob/v1-0-0/spec/OpenLineage.yml#MyCustomJobFacet'
          }
        }

    jobs:
      type: object
      properties:
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/job'

    newRun:
      type: object
      properties:
        id:
          description: An _optional_ client-provided UUID for this run (this could be a Random or name based UUID). If not provided a random UUID will be generated for the run
          type: string
          format: uuid
        nominalStartTime:
          description: An [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp representing the nominal start time of the run.
          type: string
          format: date-time
        nominalEndTime:
          description: An [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp representing the nominal end time of the run.
          type: string
          format: date-time
        args:
          description: The arguments of the run.
          type: object
        facets:
          $ref: '#/components/schemas/runFacets'
      example:
        args: {'email': 'me@example.com', 'emailOnFailure': false, 'emailOnRetry': true, 'retries': 1}
        facets: {
          'context': {
            '_producer': 'https://github.com/OpenLineage/OpenLineage/blob/v1-0-0/client',
            '_schemaURL': 'https://github.com/OpenLineage/OpenLineage/blob/v1-0-0/spec/OpenLineage.yml#MyCustomJobFacet'
          }
        }

    runAsNew:
      type: object
      properties:
        id:
          description: The ID of the run.
          type: string
          format: uuid
        createdAt:
          description: An [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp representing the date/time the run was created.
          type: string
          format: date-time
        updatedAt:
          description: An [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp representing the date/time the run was updated.
          type: string
          format: date-time
        nominalStartTime:
          description: An [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp representing the nominal start time of the run.
          type: string
          format: date-time
        nominalEndTime:
          description: An [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp representing the nominal end time of the run.
          type: string
          format: date-time
        state:
          description: The current state of the run.
          type: string
          enum: [NEW, RUNNING, COMPLETED, FAILED, ABORTED]
        startedAt:
          description: An [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp representing the start time of the run.
          type: string
          format: date-time
        endedAt:
          description: An [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp representing the end time of the run.
          type: string
          format: date-time
        durationMs:
          type: integer
          description: The total duration of the run. Measured in milliseconds.
        args:
          description: The arguments of the run.
          type: object
        facets:
          $ref: '#/components/schemas/runFacets'
      example:
        id: 870492da-ecfb-4be0-91b9-9a89ddd3db90
        createdAt: 2019-05-09T19:49:24.201361Z
        updatedAt: 2019-05-09T19:49:24.201361Z
        nominalStartTime: null
        nominalEndTime: null
        state: NEW
        startedAt: null
        endedAt: null
        durationMs: null
        args: {'email': 'me@example.com', 'emailOnFailure': 'false', 'emailOnRetry': 'true', 'retries': '1'}
        facets: {
          'context': {
            '_producer': 'https://github.com/OpenLineage/OpenLineage/blob/v1-0-0/client',
            '_schemaURL': 'https://github.com/OpenLineage/OpenLineage/blob/v1-0-0/spec/OpenLineage.yml#MyCustomJobFacet'
          }
        }

    runAsRunning:
      type: object
      properties:
        id:
          description: The ID of the run.
          type: string
          format: uuid
        createdAt:
          description: An [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp representing the date/time the run was created.
          type: string
          format: date-time
        updatedAt:
          description: An [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp representing the date/time the run was updated.
          type: string
          format: date-time
        nominalStartTime:
          description: An [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp representing the nominal start time of the run.
          type: string
          format: date-time
        nominalEndTime:
          description: An [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp representing the nominal end time of the run.
          type: string
          format: date-time
        state:
          description: The current state of the run.
          type: string
          enum: [NEW, RUNNING, COMPLETED, FAILED, ABORTED]
        startedAt:
          description: An [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp representing the start time of the run.
          type: string
          format: date-time
        endedAt:
          description: An [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp representing the end time of the run.
          type: string
          format: date-time
        durationMs:
          type: integer
          description: The total duration of the run. Measured in milliseconds.
        args:
          description: The arguments of the run.
          type: object
        facets:
          $ref: '#/components/schemas/runFacets'
      example:
        id: 870492da-ecfb-4be0-91b9-9a89ddd3db90
        createdAt: 2019-05-09T19:49:24.201361Z
        updatedAt: 2019-05-09T19:49:24.201361Z
        nominalStartTime: null
        nominalEndTime: null
        state: RUNNING
        startedAt: 2019-05-09T15:17:32.690346
        endedAt: null
        durationMs: null
        args: {'email': 'me@example.com', 'emailOnFailure': 'false', 'emailOnRetry': 'true', 'retries': '1'}
        facets: {
          'context': {
            '_producer': 'https://github.com/OpenLineage/OpenLineage/blob/v1-0-0/client',
            '_schemaURL': 'https://github.com/OpenLineage/OpenLineage/blob/v1-0-0/spec/OpenLineage.yml#MyCustomJobFacet'
          }
        }

    runAsCompleted:
      type: object
      properties:
        id:
          description: The ID of the run.
          type: string
          format: uuid
        createdAt:
          description: An [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp representing the date/time the run was created.
          type: string
          format: date-time
        updatedAt:
          description: An [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp representing the date/time the run was updated.
          type: string
          format: date-time
        nominalStartTime:
          description: An [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp representing the nominal start time of the run.
          type: string
          format: date-time
        nominalEndTime:
          description: An [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp representing the nominal end time of the run.
          type: string
          format: date-time
        state:
          description: The current state of the run.
          type: string
          enum: [NEW, RUNNING, COMPLETED, FAILED, ABORTED]
        startedAt:
          description: An [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp representing the start time of the run.
          type: string
          format: date-time
        endedAt:
          description: An [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp representing the end time of the run.
          type: string
          format: date-time
        durationMs:
          type: integer
          description: The total duration of the run. Measured in milliseconds.
        args:
          description: The arguments of the run.
          type: object
        facets:
          $ref: '#/components/schemas/runFacets'
      example:
        id: 870492da-ecfb-4be0-91b9-9a89ddd3db90
        createdAt: 2019-05-09T19:49:24.201361Z
        updatedAt: 2019-05-09T19:49:24.201361Z
        nominalStartTime: null
        nominalEndTime: null
        state: COMPLETED
        startedAt: 2019-05-09T15:17:32.690346
        endedAt: 2019-05-09T20:05:46.815920Z
        durationMs: 4250894125
        args: {'email': 'me@example.com', 'emailOnFailure': 'false', 'emailOnRetry': 'true', 'retries': '1'}
        facets: {
          'context': {
            '_producer': 'https://github.com/OpenLineage/OpenLineage/blob/v1-0-0/client',
            '_schemaURL': 'https://github.com/OpenLineage/OpenLineage/blob/v1-0-0/spec/OpenLineage.yml#MyCustomJobFacet'
          }
        }

    runAsFailed:
      type: object
      properties:
        id:
          description: The ID of the run.
          type: string
          format: uuid
        createdAt:
          description: An [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp representing the date/time the run was created.
          type: string
          format: date-time
        updatedAt:
          description: An [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp representing the date/time the run was updated.
          type: string
          format: date-time
        nominalStartTime:
          description: An [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp representing the nominal start time of the run.
          type: string
          format: date-time
        nominalEndTime:
          description: An [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp representing the nominal end time of the run.
          type: string
          format: date-time
        state:
          description: The current state of the run.
          type: string
          enum: [NEW, RUNNING, COMPLETED, FAILED, ABORTED]
        startedAt:
          description: An [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp representing the start time of the run.
          type: string
          format: date-time
        endedAt:
          description: An [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp representing the end time of the run.
          type: string
          format: date-time
        durationMs:
          type: integer
          description: The total duration of the run. Measured in milliseconds.
        args:
          description: The arguments of the run.
          type: object
        facets:
          $ref: '#/components/schemas/runFacets'
      example:
        id: 870492da-ecfb-4be0-91b9-9a89ddd3db90
        createdAt: 2019-05-09T19:49:24.201361Z
        updatedAt: 2019-05-09T19:49:24.201361Z
        nominalStartTime: null
        nominalEndTime: null
        state: FAILED
        startedAt: 2019-05-09T15:17:32.690346
        endedAt: 2019-05-09T20:05:46.815920Z
        durationMs: 4250894125
        args: {'email': 'me@example.com', 'emailOnFailure': 'false', 'emailOnRetry': 'true', 'retries': '1'}
        facets: {
          'context': {
            '_producer': 'https://github.com/OpenLineage/OpenLineage/blob/v1-0-0/client',
            '_schemaURL': 'https://github.com/OpenLineage/OpenLineage/blob/v1-0-0/spec/OpenLineage.yml#MyCustomJobFacet'
          }
        }

    runAsAborted:
      type: object
      properties:
        id:
          description: The ID of the run.
          type: string
          format: uuid
        createdAt:
          description: An [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp representing the date/time the run was created.
          type: string
          format: date-time
        updatedAt:
          description: An [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp representing the date/time the run was updated.
          type: string
          format: date-time
        nominalStartTime:
          description: An [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp representing the nominal start time of the run.
          type: string
          format: date-time
        nominalEndTime:
          description: An [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp representing the nominal end time of the run.
          type: string
          format: date-time
        state:
          description: The current state of the run.
          type: string
          enum: [NEW, RUNNING, COMPLETED, FAILED, ABORTED]
        startedAt:
          description: An [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp representing the start time of the run.
          type: string
          format: date-time
        endedAt:
          description: An [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp representing the end time of the run.
          type: string
          format: date-time
        durationMs:
          type: integer
          description: The total duration of the run. Measured in milliseconds.
        args:
          description: The arguments of the run.
          type: object
        facets:
          $ref: '#/components/schemas/runFacets'
      example:
        id: 870492da-ecfb-4be0-91b9-9a89ddd3db90
        createdAt: 2019-05-09T19:49:24.201361Z
        updatedAt: 2019-05-09T19:49:24.201361Z
        nominalStartTime: null
        nominalEndTime: null
        state: ABORTED
        startedAt: 2019-05-09T15:17:32.690346
        endedAt: 2019-05-09T20:05:46.815920Z
        durationMs: 4250894125
        args: {'email': 'me@example.com', 'emailOnFailure': 'false', 'emailOnRetry': 'true', 'retries': '1'}
        facets: {
          'context': {
            '_producer': 'https://github.com/OpenLineage/OpenLineage/blob/v1-0-0/client',
            '_schemaURL': 'https://github.com/OpenLineage/OpenLineage/blob/v1-0-0/spec/OpenLineage.yml#MyCustomJobFacet'
          }
        }
    runs:
      type: object
      properties:
        runs:
          type: array
          items:
            $ref: '#/components/schemas/runAsCompleted'

    datasetFacets:
      description: The dataset facets.
      type: object
      additionalProperties:
        $ref: '#/components/schemas/customFacet'

    jobFacets:
      description: The job facets.
      type: object
      additionalProperties:
        $ref: '#/components/schemas/customFacet'

    runFacets:
      description: The run facets.
      type: object
      additionalProperties:
        $ref: '#/components/schemas/customFacet'

    customFacet:
      description: a Custom Facet is defined is a separate spec. field must not start with _
      allOf:
        - $ref: '#/components/schemas/baseFacet'
        - type: object
          additionalProperties: true

    baseFacet:
      description: all fields of the base facet are prefixed with _ to avoid name conflicts in facets
      type: object
      properties:
        _producer:
          description: URI identifying the producer of this metadata. For example this could be a git url with a given tag or sha
          type: string
          format: uri
          example: https://github.com/OpenLineage/OpenLineage/blob/v1-0-0/client
        _schemaURL:
          description: The URL to the corresponding version of the schema definition following a $ref URL Reference (see https://swagger.io/docs/specification/using-ref/)
          type: string
          format: uri
          example: https://github.com/OpenLineage/OpenLineage/blob/v1-0-0/spec/OpenLineage.yml#MyCustomJobFacet
      required:
        - _producer
        - _schemaURL
    fieldType:
      description: The type of the field.
      type: string
      enum: [ARRAY, BIGINT, BINARY, BOOL, BOOLEAN, BPCHAR, CHAR, CHARACTER, DATE, DATETIME, DECIMAL, DOUBLE, FLOAT, FLOAT4, FLOAT8, GEOMETRY, INT, INT2, INT4, INT8, INTEGER, NCHAR, NUMBER, NUMERIC, NVARCHAR, OBJECT, REAL, SMALLINT, STRING, TEXT, TIME, TIMESTAMP, TIMESTAMPTZ, TIMESTAMP_LTZ, TIMESTAMP_NTZ, TIMESTAMP_TZ, VARBINARY, VARCHAR, VARIANT, VARYING]
